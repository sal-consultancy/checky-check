name: Build and Release

on:
  push:
    branches:
      - sl-release-workflow

jobs:
  release:
    name: Build, Test, and Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.1'  # Pas aan naar jouw Go-versie

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.18.0'  # Pas aan naar jouw Node.js versie

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Get the release version from version.txt
      id: get_version
      run: echo "RELEASE=$(cat version.txt)" >> $GITHUB_ENV

    - name: Compile for Windows
      run: |
        GOOS=windows GOARCH=amd64 \
        FILE=checkycheck-${RELEASE}-windows-amd64 \
        go build -o ${FILE}.exe main.go remote_check.go types.go helpers.go
        zip ${FILE}.zip ${FILE}.exe

    - name: Compile for macOS
      run: |
        GOOS=darwin GOARCH=arm64 \
        FILE=checkycheck-${RELEASE}-darwin-arm64 \
        go build -o ${FILE}.exe main.go remote_check.go types.go helpers.go
        zip ${FILE}.zip ${FILE}.exe

    - name: Run semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

    - name: Upload Windows build artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: checkycheck-${RELEASE}-windows-amd64.zip
        asset_name: checkycheck-${RELEASE}-windows-amd64.zip
        asset_content_type: application/zip

    - name: Upload macOS build artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: checkycheck-${RELEASE}-darwin-arm64.zip
        asset_name: checkycheck-${RELEASE}-darwin-arm64.zip
        asset_content_type: application/zip

    - name: Push updated files to GitHub
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git commit -am "rel: Bumping version ${RELEASE}"
        git push
